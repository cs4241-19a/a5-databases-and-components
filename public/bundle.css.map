{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/App.svelte"
  ],
  "sourcesContent": [
    "<style>\n    :global(body){\n        background: #333333;\n        color: #FFFFFF;\n    }\n    .shader{\n        flex: 100%;\n    }\n    .shader input{\n        width: 60%;\n        margin-top: 3%;\n        margin-bottom: 3%;\n    }\n\n    .shader label{\n        display: inline;\n        font-size: 2em;\n    }\n    .shadersButton:hover{\n        background-color: aqua;\n    }\n</style>\n<script>\n    let savedShaders = [];\n\n    //const sliders = document.querySelectorAll('.slider');\n\n    function handleClick(event) {\n        let sliderValues = [];\n        const shaderName = document.getElementById('name');\n        const shader = {};\n\n        for (let i = 0; i < sliders.length; i+=1){\n            sliderValues.push(sliders[i].value);\n\n        }\n        shader.red = sliderValues[0];\n        shader.green = sliderValues[1];\n        shader.blue = sliderValues[2];\n        shader.sin = sliderValues[3];\n        shader.tan = sliderValues[4];\n        shader.abs = sliderValues[5];\n        shader.frequency = sliderValues[6];\n        shader.name = shaderName.value.toString();\n\n        saveShader(shader);\n        shaderName.value = \"\";\n        //console.log(sliderValues);\n\n    }\n\n    function loadShader(shaderName) {\n        const sliders = document.querySelectorAll('.slider');\n        const shaderButton = document.getElementById(shaderName);\n        //console.log(\"shader:\" + shaderButton);\n\n        for(let i = 0; i < savedShaders.length; i+=1){\n            if(savedShaders[i].name === shaderName){\n                sliders[0].value = savedShaders[i].red;\n                uniforms.redSlider = savedShaders[i].red;\n\n                sliders[1].value = savedShaders[i].green;\n                uniforms.greenSlider = savedShaders[i].green;\n\n                sliders[2].value = savedShaders[i].blue;\n                uniforms.blueSlider = savedShaders[i].blue;\n\n                sliders[3].value = savedShaders[i].sin;\n                uniforms.sinSlider = savedShaders[i].sin;\n\n                sliders[4].value = savedShaders[i].tan;\n                uniforms.tanSlider = savedShaders[i].tan;\n\n                sliders[5].value = savedShaders[i].abs;\n                uniforms.absSlider = savedShaders[i].abs;\n\n                sliders[6].value = savedShaders[i].frequency;\n                uniforms.freqSlider = savedShaders[i].frequency;\n\n\n            }\n        }\n        //console.log(savedShaders);\n\n\n    }\n\n    function saveShader(shader){\n\n        const shaderButtons = document.getElementById('savedShaders');\n        savedShaders.push(shader);\n\n        shaderButtons.innerHTML += `\n        <button class=\"shaderButton\" id=\"${shader.name}\" style=\"width: 200px; background: red;\">${shader.name}</button>\n        `;\n\n        const button = document.getElementById(shader.name);\n        button.addEventListener('click', () => {\n            loadShader(button.innerText);\n            //console.log(button.innerText);\n        });\n\n\n    }\n</script>\n\n\n<div class=\"pixi-shaders\">\n    <h1 class=\"mt-4\">Shader Editor</h1>\n    <p class=\"lead mb-3\" style=\"font-size: 1.6em;\">Welcome! Play with the sliders to change shader variables</p>\n\n    <div class=\"row\" style=\"display: flex;\">\n\n      <div class=\"shader column\" >\n\n          <input class=\"slider red\" type=\"range\" name=\"red\" min=\"0\" max=\"1\" step=\"0.01\">\n          <label for=\"red\" style=\"color: red\">Red</label>\n          <br>\n          <input class=\"slider green\" type=\"range\" name=\"green\" min=\"0\" max=\"1\" step=\"0.01\">\n          <label for=\"green\" style=\"color: green\">Green</label>\n          <br>\n          <input class=\"slider blue\" type=\"range\" name=\"blue\" min=\"0\" max=\"1\" step=\"0.01\">\n          <label for=\"blue\" style=\"color: blue\">Blue</label>\n          <br>\n          <input class=\"slider sin\" type=\"range\" name=\"sin\" min=\"0\" max=\"1\" step=\"0.01\" value=\"0\">\n          <label for=\"sin\" style=\"color: #E87C27\">Sin</label>\n          <br>\n          <input class=\"slider tan\" type=\"range\" name=\"tan\" min=\"0\" max=\"1\" step=\"0.01\" value=\"0\">\n          <label for=\"tan\" style=\"color: yellow\">Tan</label>\n          <br>\n          <input class=\"slider abs\" type=\"range\" name=\"abs\" min=\"0\" max=\"1\" step=\"0.01\">\n          <label for=\"abs\" style=\"color: cyan\">Absolute</label>\n          <br>\n          <input class=\"slider freq\" type=\"range\" name=\"freq\" min=\"1\" max=\"5\" step=\"0.1\">\n          <label for=\"freq\" style=\"color: purple\">Frequency</label>\n          <br>\n          <input type=\"name\" id=\"name\" name=\"name\" placeholder=\"Shader name\"/>\n          <br>\n\n\n          <button on:click={handleClick} style=\"width: 200px;\">\n          \tSave shader values\n          </button>\n        <br>\n        <div id=\"savedShaders\">\n\n        </div>\n      </div>\n\n      <div class=\"column pixi\" style=\"flex: 50%; \">\n        <canvas id=\"pixi\" style=\"margin-left: 60px\"></canvas>\n        <script type=\"text/javascript\">\n          const pixiCanvas = document.getElementById('pixi');\n          const sliders = document.querySelectorAll('.slider');\n\n\n          const pixiApp = new PIXI.Application({\n              view: pixiCanvas,\n              width: 700,\n              height: 500\n          });\n\n          const renderer = new PIXI.Renderer({});\n\n          let vShader = `\n                  attribute vec2 aVertexPosition;\n                  attribute vec2 aTextureCoord;\n\n                  uniform mat3 projectionMatrix;\n                  varying vec2 vTextureCoord;\n\n                  void main(void){\n                      gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n                      vTextureCoord = aTextureCoord;\n                  }`;\n          let fShader = `\n                  varying vec2 vTextureCoord;\n                  uniform sampler2D uSampler;\n                  uniform float uTime;\n                  uniform float redSlider;\n                  uniform float greenSlider;\n                  uniform float blueSlider;\n                  uniform float sinSlider;\n                  uniform float tanSlider;\n                  uniform float absSlider;\n                  uniform float freqSlider;\n\n\n\n                  void main(void){\n                      vec4 color = texture2D(uSampler, vTextureCoord);\n                      float waveX = sin(uTime + (vTextureCoord.x * 3.0)) - sinSlider;\n                      float waveY = tan(uTime + (vTextureCoord.y * 3.0));\n\n                      if(color.b > 0.9 && tanSlider > 0.0){\n\n                        color = vec4(vec3(waveY), tan(uTime + tanSlider));\n                      }\n\n                      if(color.b > 0.9 && sinSlider > 0.0){\n\n                        color = vec4(vec3(waveX), 1);\n                      }\n\n\n                      if(absSlider > 0.0){\n                              color.r = abs(color.r) / absSlider;\n                              color.g = abs(color.g) / absSlider;\n                              color.b = abs(color.b) / absSlider;\n                          }\n                      color.r = color.r * redSlider;\n                      color.g = color.g * greenSlider;\n                      color.b = color.b * blueSlider;\n\n\n                      gl_FragColor = color;\n                  }`;\n\n\n          let uniforms = {\n              uTime: 0,\n              redSlider: 1.0,\n              blueSlider: 1.0,\n              greenSlider: 1.0,\n              sinSlider: 0,\n              tanSlider: 0,\n              absSlider: 0.5,\n              freqSlider: 1\n          };\n\n          const slide = function(event){\n\n              if(event.target.matches('.red')){\n                  uniforms.redSlider = event.target.value;\n              }\n              if(event.target.matches('.green')){\n                  uniforms.greenSlider = event.target.value;\n              }\n              if(event.target.matches('.blue')){\n                  uniforms.blueSlider = event.target.value;\n              }\n              if(event.target.matches('.sin')){\n                  uniforms.sinSlider = event.target.value;\n              }\n              if(event.target.matches('.abs')){\n                  uniforms.absSlider = event.target.value;\n              }\n              if(event.target.matches('.freq')){\n                  uniforms.freqSlider = event.target.value;\n              }\n              if(event.target.matches('.tan')){\n                  uniforms.tanSlider = event.target.value;\n              }\n          };\n\n\n          const myFilter = new PIXI.Filter(vShader, fShader, uniforms);\n\n          const texture = PIXI.Texture.from('https://cdn.glitch.com/4dd0b763-d029-4fb7-9d05-a13adddc61f2%2Fhusky_copy.png?v=1568561412816');\n          const husky = new PIXI.Sprite(texture);\n\n          husky.x = pixiApp.renderer.width / 2;\n          husky.y = pixiApp.renderer.height / 2;\n          husky.anchor.x = 0.5;\n          husky.anchor.y = 0.5;\n          husky.scale.x = 1.5;\n          husky.scale.y = 1.5;\n\n          husky.filters = [myFilter];\n\n          pixiApp.stage.addChild(husky);\n          pixiApp.ticker.add(animate);\n\n          // This function is not attached to a const to define it at the top of the script\n          function animate() {\n              uniforms.uTime += (0.005 * (uniforms.freqSlider + 5));\n              husky.angle += 1;\n          }\n\n          // Event listner\n          sliders.forEach(slider => slider.addEventListener('input', slide));\n        </script>\n\n        </div>\n    </div>\n  <br>\n</div>\n"
  ],
  "names": [],
  "mappings": "AACY,IAAI,AAAC,CAAC,AACV,UAAU,CAAE,OAAO,CACnB,KAAK,CAAE,OAAO,AAClB,CAAC,AACD,qBAAO,CAAC,AACJ,IAAI,CAAE,IAAI,AACd,CAAC,AACD,qBAAO,CAAC,mBAAK,CAAC,AACV,KAAK,CAAE,GAAG,CACV,UAAU,CAAE,EAAE,CACd,aAAa,CAAE,EAAE,AACrB,CAAC,AAED,qBAAO,CAAC,mBAAK,CAAC,AACV,OAAO,CAAE,MAAM,CACf,SAAS,CAAE,GAAG,AAClB,CAAC"
}